flex test.l
bison test.y -Wcounterexamples
test.y: warning: 11 shift/reduce conflicts [-Wconflicts-sr]
test.y: warning: shift/reduce conflict on token OSQRE [-Wcounterexamples]
  Example: Exclam PrimaryExpression • OSQRE PrimaryExpression CSqre
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 60: PrimaryExpression OSqre         PrimaryExpression CSqre
                                               ↳ 86: • OSQRE
  Reduce derivation
    Expression
    ↳ 60: PrimaryExpression                      OSqre       PrimaryExpression CSqre
          ↳ 74: Exclam Expression                ↳ 86: OSQRE
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token DOT [-Wcounterexamples]
  Example: Exclam PrimaryExpression • DOT Length
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 61: PrimaryExpression Dot         Length
                                               ↳ 90: • DOT
  Reduce derivation
    Expression
    ↳ 61: PrimaryExpression                      Dot       Length
          ↳ 74: Exclam Expression                ↳ 90: DOT
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token LAND [-Wcounterexamples]
  Example: Exclam PrimaryExpression • LAND PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 52: PrimaryExpression Land          PrimaryExpression
                                               ↳ 104: • LAND
  Reduce derivation
    Expression
    ↳ 52: PrimaryExpression                      Land        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 104: LAND
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token LOR [-Wcounterexamples]
  Example: Exclam PrimaryExpression • LOR PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 53: PrimaryExpression Lor          PrimaryExpression
                                               ↳ 105: • LOR
  Reduce derivation
    Expression
    ↳ 53: PrimaryExpression                      Lor        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 105: LOR
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token NEQ [-Wcounterexamples]
  Example: Exclam PrimaryExpression • NEQ PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 54: PrimaryExpression Neq          PrimaryExpression
                                               ↳ 106: • NEQ
  Reduce derivation
    Expression
    ↳ 54: PrimaryExpression                      Neq        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 106: NEQ
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token LEQ [-Wcounterexamples]
  Example: Exclam PrimaryExpression • LEQ PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 55: PrimaryExpression Leq          PrimaryExpression
                                               ↳ 107: • LEQ
  Reduce derivation
    Expression
    ↳ 55: PrimaryExpression                      Leq        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 107: LEQ
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token PLUS [-Wcounterexamples]
  Example: Exclam PrimaryExpression • PLUS PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 56: PrimaryExpression Plus          PrimaryExpression
                                               ↳ 108: • PLUS
  Reduce derivation
    Expression
    ↳ 56: PrimaryExpression                      Plus        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 108: PLUS
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token MINUS [-Wcounterexamples]
  Example: Exclam PrimaryExpression • MINUS PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 57: PrimaryExpression Minus          PrimaryExpression
                                               ↳ 109: • MINUS
  Reduce derivation
    Expression
    ↳ 57: PrimaryExpression                      Minus        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 109: MINUS
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token MUL [-Wcounterexamples]
  Example: Exclam PrimaryExpression • MUL PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 58: PrimaryExpression Mul          PrimaryExpression
                                               ↳ 110: • MUL
  Reduce derivation
    Expression
    ↳ 58: PrimaryExpression                      Mul        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 110: MUL
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token DIV [-Wcounterexamples]
  Example: Exclam PrimaryExpression • DIV PrimaryExpression
  Shift derivation
    Expression
    ↳ 62: PrimaryExpression
          ↳ 74: Exclam Expression
                       ↳ 59: PrimaryExpression Div          PrimaryExpression
                                               ↳ 111: • DIV
  Reduce derivation
    Expression
    ↳ 59: PrimaryExpression                      Div        PrimaryExpression
          ↳ 74: Exclam Expression                ↳ 111: DIV
                       ↳ 62: PrimaryExpression •
test.y: warning: shift/reduce conflict on token ELSE [-Wcounterexamples]
  Example: If OParen Expression CParen If OParen Expression CParen Statement • ELSE Statement
  Shift derivation
    Statement
    ↳ 45: If OParen Expression CParen Statement
                                      ↳ 46: If OParen Expression CParen Statement Else          Statement
                                                                                  ↳ 101: • ELSE
  Reduce derivation
    Statement
    ↳ 46: If OParen Expression CParen Statement                                     Else        Statement
                                      ↳ 45: If OParen Expression CParen Statement • ↳ 101: ELSE
gcc test.tab.c -o test.exe -lfl
# gcc test.tab.c -o test.exe -ll #on macOS
returnLL called #defineexpr0 
returnLL called ZERO
returnLL called (
returnLL called )
returnLL called (
returnLL called 0
returnLL called  + 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
create_macro_definition_expr0 called
returnLL called ZERO
args created with ZERO
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
addMacro called with ZERO
returnLL called #defineexpr0 
returnLL called ONE
returnLL called (
returnLL called )
returnLL called (
returnLL called 1
returnLL called  + 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
create_macro_definition_expr0 called
returnLL called ONE
args created with ONE
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
addMacro called with ONE
returnLL called #definestmt1 
returnLL called print
returnLL called (
returnLL called arg
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called arg
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called #defineexpr0 
returnLL called LARGE
returnLL called (
returnLL called )
returnLL called (
returnLL called 9999
returnLL called  + 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
create_macro_definition_expr0 called
returnLL called LARGE
args created with LARGE
returnLL called 9999
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
addMacro called with LARGE
returnLL called #defineexpr0 
returnLL called INPUT
returnLL called (
returnLL called )
returnLL called (
returnLL called 20
returnLL called  + 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
create_macro_definition_expr0 called
returnLL called INPUT
args created with INPUT
returnLL called 20
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
addMacro called with INPUT
returnLL called class 
returnLL called BinarySearch
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called BS
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called INPUT
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 20
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called BS
returnLL called  {

returnLL called int 
returnLL called [
returnLL called ] 
attach_lists called
attach_lists called
returnLL called number
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called size
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Init
returnLL called (
returnLL called sz
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 8
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 19
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 20
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 21
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 37
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 38
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 39
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 50
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called print
returnLL called (
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called print
returnLL called (
returnLL called ZERO
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 0
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 999
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Search
returnLL called (
returnLL called int 
returnLL called num
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called bs01
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called right
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called left
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called var_cont
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called medium
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called bs01
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called right
returnLL called  = 
returnLL called number
returnLL called .
returnLL called length
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called right
returnLL called  = 
returnLL called right
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called left
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called var_cont
returnLL called )
returnLL called  {

returnLL called medium
returnLL called  = 
returnLL called left
returnLL called  + 
returnLL called right
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called medium
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Div
returnLL called (
returnLL called medium
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called number
returnLL called [
returnLL called medium
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called num
returnLL called  <= 
returnLL called (
returnLL called aux01
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called right
returnLL called  = 
returnLL called medium
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called left
returnLL called  = 
returnLL called medium
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Compare
returnLL called (
returnLL called aux01
returnLL called ,
returnLL called num
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called var_cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called var_cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called right
returnLL called  <= 
returnLL called (
returnLL called left
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called var_cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Compare
returnLL called (
returnLL called aux01
returnLL called ,
returnLL called num
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called bs01
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called bs01
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called bs01
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Div
returnLL called (
returnLL called int 
returnLL called num
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called count01
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called count02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux03
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called count01
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called count02
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux03
returnLL called  = 
returnLL called num
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called (
returnLL called count02
returnLL called  <= 
returnLL called aux03
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called count02
returnLL called  != 
returnLL called aux03
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called count01
returnLL called  = 
returnLL called count01
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called count02
returnLL called  = 
returnLL called count02
returnLL called  + 
returnLL called 2
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called count01
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Compare
returnLL called (
returnLL called int 
returnLL called num1
attach_lists called
returnLL called ,
returnLL called int 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called retval
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called retval
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called num2
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called (
returnLL called num2
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called retval
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called (
returnLL called aux02
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called retval
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called retval
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called retval
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called size
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called j
returnLL called  != 
returnLL called size
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called LARGE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 9999
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called k
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called size
returnLL called  = 
returnLL called sz
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called  = 
returnLL called new 
returnLL called int 
returnLL called [
returnLL called sz
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called k
returnLL called  = 
returnLL called size
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called (
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called aux01
returnLL called  = 
returnLL called 2
returnLL called  * 
returnLL called j
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called k
returnLL called  - 
returnLL called 3
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
returnLL called  = 
returnLL called aux01
returnLL called  + 
returnLL called aux02
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called k
returnLL called  = 
returnLL called k
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called class 
returnLL called BinaryTree
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called BT
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called BT
returnLL called  {

returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called root
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called root
returnLL called  = 
returnLL called new 
returnLL called Tree
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Init
returnLL called (
returnLL called 16
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 100000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 8
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 24
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 4
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 20
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 28
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 14
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 24
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 16
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 50
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Delete
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called Tree
returnLL called  {

returnLL called Tree
returnLL called left
returnLL called ;

attach_lists called
attach_lists called
returnLL called Tree
returnLL called right
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called has_left
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called has_right
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Tree
returnLL called my_null
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called key
returnLL called  = 
returnLL called v_key
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called has_left
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called has_right
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetRight
returnLL called (
returnLL called Tree
returnLL called rn
attach_lists called
returnLL called )
returnLL called  {

returnLL called right
returnLL called  = 
returnLL called rn
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetLeft
returnLL called (
returnLL called Tree
returnLL called ln
attach_lists called
returnLL called )
returnLL called  {

returnLL called left
returnLL called  = 
returnLL called ln
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called Tree
returnLL called GetRight
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called right
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called Tree
returnLL called GetLeft
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called left
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called GetKey
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called key
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetKey
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called key
returnLL called  = 
returnLL called v_key
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called GetHas_Right
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called has_right
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called GetHas_Left
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called has_left
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetHas_Left
returnLL called (
returnLL called boolean 
returnLL called val
attach_lists called
returnLL called )
returnLL called  {

returnLL called has_left
returnLL called  = 
returnLL called val
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetHas_Right
returnLL called (
returnLL called boolean 
returnLL called val
attach_lists called
returnLL called )
returnLL called  {

returnLL called has_right
returnLL called  = 
returnLL called val
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Compare
returnLL called (
returnLL called int 
returnLL called num1
attach_lists called
returnLL called ,
returnLL called int 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called num2
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called (
returnLL called num2
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called (
returnLL called nti
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called ntb
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Insert
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called new_node
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key_aux
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called new_node
returnLL called  = 
returnLL called new 
returnLL called Tree
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called new_node
returnLL called .
returnLL called Init
returnLL called (
returnLL called v_key
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont
returnLL called )
returnLL called  {

returnLL called key_aux
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called v_key
returnLL called  <= 
returnLL called key_aux
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called v_key
returnLL called  != 
returnLL called key_aux
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetHas_Left
returnLL called (
returnLL called true
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetLeft
returnLL called (
returnLL called new_node
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetHas_Right
returnLL called (
returnLL called true
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetRight
returnLL called (
returnLL called new_node
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Delete
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
returnLL called Tree
returnLL called parent_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called found
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called is_root
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key_aux
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called parent_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called found
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called is_root
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont
returnLL called )
returnLL called  {

returnLL called key_aux
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called v_key
returnLL called  <= 
returnLL called key_aux
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called v_key
returnLL called  != 
returnLL called key_aux
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called parent_node
returnLL called  = 
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called (
returnLL called key_aux
returnLL called  <= 
returnLL called v_key
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called key_aux
returnLL called  != 
returnLL called v_key
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called parent_node
returnLL called  = 
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called if 
returnLL called (
returnLL called is_root
returnLL called )
returnLL called if 
returnLL called (
returnLL called (
returnLL called !
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called !
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Remove
returnLL called (
returnLL called parent_node
returnLL called ,
returnLL called current_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Remove
returnLL called (
returnLL called parent_node
returnLL called ,
returnLL called current_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called found
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called is_root
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called found
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Remove
returnLL called (
returnLL called Tree
returnLL called p_node
attach_lists called
returnLL called ,
returnLL called Tree
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called auxkey1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called auxkey2
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RemoveLeft
returnLL called (
returnLL called p_node
returnLL called ,
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RemoveRight
returnLL called (
returnLL called p_node
returnLL called ,
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called auxkey1
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called auxkey2
returnLL called  = 
returnLL called (
returnLL called p_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Compare
returnLL called (
returnLL called auxkey1
returnLL called ,
returnLL called auxkey2
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetLeft
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Left
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetRight
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Right
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called RemoveRight
returnLL called (
returnLL called Tree
returnLL called p_node
attach_lists called
returnLL called ,
returnLL called Tree
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called SetKey
returnLL called (
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called p_node
returnLL called  = 
returnLL called c_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called c_node
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetRight
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Right
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called RemoveLeft
returnLL called (
returnLL called Tree
returnLL called p_node
attach_lists called
returnLL called ,
returnLL called Tree
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called SetKey
returnLL called (
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called p_node
returnLL called  = 
returnLL called c_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called c_node
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetLeft
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Left
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Search
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called cont
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called ifound
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key_aux
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ifound
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont
returnLL called )
returnLL called  {

returnLL called key_aux
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called v_key
returnLL called  <= 
returnLL called key_aux
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called v_key
returnLL called  != 
returnLL called key_aux
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called (
returnLL called key_aux
returnLL called  <= 
returnLL called v_key
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called key_aux
returnLL called  != 
returnLL called v_key
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called ifound
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called ifound
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RecPrint
returnLL called (
returnLL called current_node
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called RecPrint
returnLL called (
returnLL called Tree
returnLL called node
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RecPrint
returnLL called (
returnLL called node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RecPrint
returnLL called (
returnLL called node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called class 
returnLL called BubbleSort
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called BBS
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called 10
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called BBS
returnLL called  {

returnLL called int 
returnLL called [
returnLL called ] 
attach_lists called
attach_lists called
returnLL called number
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called size
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Init
returnLL called (
returnLL called sz
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 99999
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Sort
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Sort
returnLL called (
returnLL called )
returnLL called  {

returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called i
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux04
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux05
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux06
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux07
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called t
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called i
returnLL called  = 
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called 0
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called aux02
returnLL called  <= 
returnLL called (
returnLL called i
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called j
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called i
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called aux07
returnLL called  = 
returnLL called j
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux04
returnLL called  = 
returnLL called number
returnLL called [
returnLL called aux07
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux05
returnLL called  = 
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called aux05
returnLL called  <= 
returnLL called (
returnLL called aux04
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called aux06
returnLL called  = 
returnLL called j
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called t
returnLL called  = 
returnLL called number
returnLL called [
returnLL called aux06
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called aux06
returnLL called ] 
returnLL called  = 
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
returnLL called  = 
returnLL called t
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called i
returnLL called  = 
returnLL called i
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called (
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called size
returnLL called  = 
returnLL called sz
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called  = 
returnLL called new 
returnLL called int 
returnLL called [
returnLL called sz
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 0
returnLL called ] 
returnLL called  = 
returnLL called 20
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 1
returnLL called ] 
returnLL called  = 
returnLL called 7
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 2
returnLL called ] 
returnLL called  = 
returnLL called 12
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 3
returnLL called ] 
returnLL called  = 
returnLL called 18
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 4
returnLL called ] 
returnLL called  = 
returnLL called 2
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 5
returnLL called ] 
returnLL called  = 
returnLL called 11
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 6
returnLL called ] 
returnLL called  = 
returnLL called 6
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 7
returnLL called ] 
returnLL called  = 
returnLL called 9
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 8
returnLL called ] 
returnLL called  = 
returnLL called 19
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 9
returnLL called ] 
returnLL called  = 
returnLL called 5
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called #defineexpr0 
returnLL called NUM
returnLL called (
returnLL called )
returnLL called (
returnLL called 10
returnLL called  + 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
create_macro_definition_expr0 called
returnLL called NUM
args created with NUM
returnLL called 10
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
addMacro called with NUM
returnLL called #defineexpr0 
returnLL called ONE
returnLL called (
returnLL called )
returnLL called (
returnLL called 1
returnLL called  + 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
create_macro_definition_expr0 called
returnLL called ONE
args created with ONE
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
addMacro called with ONE
returnLL called class 
returnLL called Factorial
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called Fac
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called ComputeFac
returnLL called (
returnLL called NUM
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 10
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called Fac
returnLL called  {

returnLL called public 
returnLL called int 
returnLL called ComputeFac
returnLL called (
returnLL called int 
returnLL called num
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called num_aux
returnLL called ;

attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called num
returnLL called  <= 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called num
returnLL called  != 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called num_aux
returnLL called  = 
returnLL called ONE
returnLL called (
returnLL called )
replace_macro_expr0 called
returnLL called 1
returnLL called  + 
attach_lists called
returnLL called 0
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called num_aux
returnLL called  = 
returnLL called num
returnLL called  * 
returnLL called (
returnLL called this
returnLL called .
returnLL called ComputeFac
returnLL called (
returnLL called num
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called num_aux
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called class 
returnLL called LinearSearch
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called LS
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called 10
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called LS
returnLL called  {

returnLL called int 
returnLL called [
returnLL called ] 
attach_lists called
attach_lists called
returnLL called number
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called size
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Init
returnLL called (
returnLL called sz
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 9999
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 8
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 17
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called this
returnLL called .
returnLL called Search
returnLL called (
returnLL called 50
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 55
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called (
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Search
returnLL called (
returnLL called int 
returnLL called num
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ls01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called ifound
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ls01
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ifound
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called (
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called aux01
returnLL called  = 
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called num
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called aux01
returnLL called  <= 
returnLL called num
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called aux01
returnLL called  != 
returnLL called num
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called aux01
returnLL called  <= 
returnLL called (
returnLL called aux02
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called ls01
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ifound
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called size
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called ifound
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called k
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called size
returnLL called  = 
returnLL called sz
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called  = 
returnLL called new 
returnLL called int 
returnLL called [
returnLL called sz
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called k
returnLL called  = 
returnLL called size
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called (
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called aux01
returnLL called  = 
returnLL called 2
returnLL called  * 
returnLL called j
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called k
returnLL called  - 
returnLL called 3
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
returnLL called  = 
returnLL called aux01
returnLL called  + 
returnLL called aux02
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called k
returnLL called  = 
returnLL called k
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called class 
returnLL called LinkedList
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called LL
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called Element
returnLL called  {

returnLL called int 
returnLL called Age
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called Salary
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called Married
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called v_Age
attach_lists called
returnLL called ,
returnLL called int 
returnLL called v_Salary
attach_lists called
returnLL called ,
returnLL called boolean 
returnLL called v_Married
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called Age
returnLL called  = 
returnLL called v_Age
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Salary
returnLL called  = 
returnLL called v_Salary
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Married
returnLL called  = 
returnLL called v_Married
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called GetAge
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called Age
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called GetSalary
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called Salary
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called GetMarried
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called Married
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Equal
returnLL called (
returnLL called Element
returnLL called other
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ret_val
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ret_val
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called other
returnLL called .
returnLL called GetAge
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called !
returnLL called this
returnLL called .
returnLL called Compare
returnLL called (
returnLL called aux01
returnLL called ,
returnLL called Age
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ret_val
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called aux02
returnLL called  = 
returnLL called other
returnLL called .
returnLL called GetSalary
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called !
returnLL called this
returnLL called .
returnLL called Compare
returnLL called (
returnLL called aux02
returnLL called ,
returnLL called Salary
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ret_val
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called Married
returnLL called )
returnLL called if 
returnLL called (
returnLL called !
returnLL called other
returnLL called .
returnLL called GetMarried
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ret_val
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called other
returnLL called .
returnLL called GetMarried
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ret_val
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called ret_val
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Compare
returnLL called (
returnLL called int 
returnLL called num1
attach_lists called
returnLL called ,
returnLL called int 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called retval
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called retval
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called num2
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called num1
returnLL called  != 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called retval
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called (
returnLL called aux02
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called retval
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called retval
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called retval
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called List
returnLL called  {

returnLL called Element
returnLL called elem
returnLL called ;

attach_lists called
attach_lists called
returnLL called List
returnLL called next
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Init
returnLL called (
returnLL called )
returnLL called  {

returnLL called end
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called InitNew
returnLL called (
returnLL called Element
returnLL called v_elem
attach_lists called
returnLL called ,
returnLL called List
returnLL called v_next
attach_lists called
returnLL called ,
returnLL called boolean 
returnLL called v_end
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called end
returnLL called  = 
returnLL called v_end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called elem
returnLL called  = 
returnLL called v_elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called next
returnLL called  = 
returnLL called v_next
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called List
returnLL called Insert
returnLL called (
returnLL called Element
returnLL called new_elem
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ret_val
returnLL called ;

attach_lists called
attach_lists called
returnLL called List
returnLL called aux03
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called List
returnLL called aux02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux03
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux02
returnLL called  = 
returnLL called new 
returnLL called List
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ret_val
returnLL called  = 
returnLL called aux02
returnLL called .
returnLL called InitNew
returnLL called (
returnLL called new_elem
returnLL called ,
returnLL called aux03
returnLL called ,
returnLL called false
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called aux02
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetNext
returnLL called (
returnLL called List
returnLL called v_next
attach_lists called
returnLL called )
returnLL called  {

returnLL called next
returnLL called  = 
returnLL called v_next
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called List
returnLL called Delete
returnLL called (
returnLL called Element
returnLL called e
attach_lists called
returnLL called )
returnLL called  {

returnLL called List
returnLL called my_head
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ret_val
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called aux05
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called List
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called List
returnLL called prev
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called var_end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Element
returnLL called var_elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux04
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called my_head
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ret_val
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux04
returnLL called  = 
returnLL called 0
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called prev
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_end
returnLL called  = 
returnLL called end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_elem
returnLL called  = 
returnLL called elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called (
returnLL called !
returnLL called var_end
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called !
returnLL called ret_val
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called if 
returnLL called (
returnLL called e
returnLL called .
returnLL called Equal
returnLL called (
returnLL called var_elem
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ret_val
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called aux04
returnLL called  <= 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called aux04
returnLL called  != 
returnLL called 0
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called my_head
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetNext
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called 0
returnLL called  - 
returnLL called 555
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called aux05
returnLL called  = 
returnLL called prev
returnLL called .
returnLL called SetNext
returnLL called (
returnLL called aux01
returnLL called .
returnLL called GetNext
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 0
returnLL called  - 
returnLL called 555
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called !
returnLL called ret_val
attach_lists called
returnLL called )
returnLL called  {

returnLL called prev
returnLL called  = 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetNext
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_end
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetEnd
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_elem
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetElem
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux04
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called my_head
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Search
returnLL called (
returnLL called Element
returnLL called e
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called int_ret_val
returnLL called ;

attach_lists called
attach_lists called
returnLL called List
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Element
returnLL called var_elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called var_end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int_ret_val
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_end
returnLL called  = 
returnLL called end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_elem
returnLL called  = 
returnLL called elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called !
returnLL called var_end
attach_lists called
returnLL called )
returnLL called  {

returnLL called if 
returnLL called (
returnLL called e
returnLL called .
returnLL called Equal
returnLL called (
returnLL called var_elem
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called int_ret_val
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetNext
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_end
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetEnd
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_elem
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetElem
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called int_ret_val
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called GetEnd
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called end
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called Element
returnLL called GetElem
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called elem
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called List
returnLL called GetNext
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called next
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called List
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called var_end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Element
returnLL called var_elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_end
returnLL called  = 
returnLL called end
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_elem
returnLL called  = 
returnLL called elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called !
returnLL called var_end
attach_lists called
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called var_elem
returnLL called .
returnLL called GetAge
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetNext
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_end
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetEnd
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called var_elem
returnLL called  = 
returnLL called aux01
returnLL called .
returnLL called GetElem
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called LL
returnLL called  {

returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called )
returnLL called  {

returnLL called List
returnLL called head
returnLL called ;

attach_lists called
attach_lists called
returnLL called List
returnLL called last_elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Element
returnLL called el01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Element
returnLL called el02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Element
returnLL called el03
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called last_elem
returnLL called  = 
returnLL called new 
returnLL called List
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called last_elem
returnLL called .
returnLL called Init
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called last_elem
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Init
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called el01
returnLL called  = 
returnLL called new 
returnLL called Element
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called el01
returnLL called .
returnLL called Init
returnLL called (
returnLL called 25
returnLL called ,
returnLL called 37000
returnLL called ,
returnLL called false
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Insert
returnLL called (
returnLL called el01
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 10000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called el01
returnLL called  = 
returnLL called new 
returnLL called Element
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called el01
returnLL called .
returnLL called Init
returnLL called (
returnLL called 39
returnLL called ,
returnLL called 42000
returnLL called ,
returnLL called true
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called el02
returnLL called  = 
returnLL called el01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Insert
returnLL called (
returnLL called el01
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 10000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called el01
returnLL called  = 
returnLL called new 
returnLL called Element
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called el01
returnLL called .
returnLL called Init
returnLL called (
returnLL called 22
returnLL called ,
returnLL called 34000
returnLL called ,
returnLL called false
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Insert
returnLL called (
returnLL called el01
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called el03
returnLL called  = 
returnLL called new 
returnLL called Element
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called el03
returnLL called .
returnLL called Init
returnLL called (
returnLL called 27
returnLL called ,
returnLL called 34000
returnLL called ,
returnLL called false
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called head
returnLL called .
returnLL called Search
returnLL called (
returnLL called el02
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called head
returnLL called .
returnLL called Search
returnLL called (
returnLL called el03
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 10000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called el01
returnLL called  = 
returnLL called new 
returnLL called Element
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called el01
returnLL called .
returnLL called Init
returnLL called (
returnLL called 28
returnLL called ,
returnLL called 35000
returnLL called ,
returnLL called false
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Insert
returnLL called (
returnLL called el01
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 2220000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Delete
returnLL called (
returnLL called el02
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 33300000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called head
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Delete
returnLL called (
returnLL called el01
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called head
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 44440000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called class 
returnLL called QuickSort
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called QS
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called 10
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called QS
returnLL called  {

returnLL called int 
returnLL called [
returnLL called ] 
attach_lists called
attach_lists called
returnLL called number
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called size
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called aux01
returnLL called ;

attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Init
returnLL called (
returnLL called sz
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 9999
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Sort
returnLL called (
returnLL called 0
returnLL called ,
returnLL called aux01
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux01
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Sort
returnLL called (
returnLL called int 
returnLL called left
attach_lists called
returnLL called ,
returnLL called int 
returnLL called right
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called v
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called i
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nt
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called t
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont01
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont02
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called aux03
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called t
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called left
returnLL called  <= 
returnLL called right
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called left
returnLL called  != 
returnLL called right
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called v
returnLL called  = 
returnLL called number
returnLL called [
returnLL called right
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called i
returnLL called  = 
returnLL called left
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called right
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont01
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont01
returnLL called )
returnLL called  {

returnLL called cont02
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont02
returnLL called )
returnLL called  {

returnLL called i
returnLL called  = 
returnLL called i
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux03
returnLL called  = 
returnLL called number
returnLL called [
returnLL called i
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called aux03
returnLL called  <= 
returnLL called (
returnLL called v
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called cont02
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont02
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called cont02
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont02
returnLL called )
returnLL called  {

returnLL called j
returnLL called  = 
returnLL called j
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called aux03
returnLL called  = 
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called v
returnLL called  <= 
returnLL called (
returnLL called aux03
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called cont02
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont02
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called t
returnLL called  = 
returnLL called number
returnLL called [
returnLL called i
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called i
returnLL called ] 
returnLL called  = 
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
returnLL called  = 
returnLL called t
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called i
attach_lists called
attach_lists called
returnLL called )
returnLL called cont01
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont01
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
returnLL called  = 
returnLL called number
returnLL called [
returnLL called i
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called i
returnLL called ] 
returnLL called  = 
returnLL called number
returnLL called [
returnLL called right
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called right
returnLL called ] 
returnLL called  = 
returnLL called t
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called nt
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Sort
returnLL called (
returnLL called left
returnLL called ,
returnLL called i
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nt
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Sort
returnLL called (
returnLL called i
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ,
returnLL called right
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nt
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called int 
returnLL called j
returnLL called ;

attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called j
returnLL called  <= 
returnLL called (
returnLL called size
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called number
returnLL called [
returnLL called j
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called j
returnLL called  = 
returnLL called j
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called sz
attach_lists called
returnLL called )
returnLL called  {

returnLL called size
returnLL called  = 
returnLL called sz
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called  = 
returnLL called new 
returnLL called int 
returnLL called [
returnLL called sz
returnLL called ] 
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 0
returnLL called ] 
returnLL called  = 
returnLL called 20
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 1
returnLL called ] 
returnLL called  = 
returnLL called 7
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 2
returnLL called ] 
returnLL called  = 
returnLL called 12
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 3
returnLL called ] 
returnLL called  = 
returnLL called 18
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 4
returnLL called ] 
returnLL called  = 
returnLL called 2
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 5
returnLL called ] 
returnLL called  = 
returnLL called 11
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 6
returnLL called ] 
returnLL called  = 
returnLL called 6
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 7
returnLL called ] 
returnLL called  = 
returnLL called 9
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 8
returnLL called ] 
returnLL called  = 
returnLL called 19
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called number
returnLL called [
returnLL called 9
returnLL called ] 
returnLL called  = 
returnLL called 5
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
returnLL called class 
returnLL called TreeVisitor
returnLL called  {

returnLL called public 
returnLL called static 
returnLL called void 
returnLL called main 
returnLL called (
returnLL called String 
returnLL called [
returnLL called ] 
returnLL called a
returnLL called )
returnLL called  {

returnLL called System.out.println
returnLL called (
returnLL called new 
returnLL called TV
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called .
returnLL called Start
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

returnLL called }

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called TV
returnLL called  {

returnLL called public 
returnLL called int 
returnLL called Start
returnLL called (
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called root
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called MyVisitor
returnLL called v
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called root
returnLL called  = 
returnLL called new 
returnLL called Tree
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Init
returnLL called (
returnLL called 16
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 100000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 8
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 24
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 4
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 20
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 28
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Insert
returnLL called (
returnLL called 14
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 100000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called v
returnLL called  = 
returnLL called new 
returnLL called MyVisitor
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 50000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called root
returnLL called .
returnLL called accept
returnLL called (
returnLL called v
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 100000000
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 24
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 16
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 50
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Delete
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called root
returnLL called .
returnLL called Print
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called root
returnLL called .
returnLL called Search
returnLL called (
returnLL called 12
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called Tree
returnLL called  {

returnLL called Tree
returnLL called left
returnLL called ;

attach_lists called
attach_lists called
returnLL called Tree
returnLL called right
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called has_left
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called has_right
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Tree
returnLL called my_null
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Init
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called key
returnLL called  = 
returnLL called v_key
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called has_left
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called has_right
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetRight
returnLL called (
returnLL called Tree
returnLL called rn
attach_lists called
returnLL called )
returnLL called  {

returnLL called right
returnLL called  = 
returnLL called rn
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetLeft
returnLL called (
returnLL called Tree
returnLL called ln
attach_lists called
returnLL called )
returnLL called  {

returnLL called left
returnLL called  = 
returnLL called ln
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called Tree
returnLL called GetRight
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called right
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called Tree
returnLL called GetLeft
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called left
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called GetKey
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called key
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetKey
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called key
returnLL called  = 
returnLL called v_key
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called GetHas_Right
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called has_right
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called GetHas_Left
returnLL called (
returnLL called )
returnLL called  {

returnLL called return 
returnLL called has_left
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetHas_Left
returnLL called (
returnLL called boolean 
returnLL called val
attach_lists called
returnLL called )
returnLL called  {

returnLL called has_left
returnLL called  = 
returnLL called val
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called SetHas_Right
returnLL called (
returnLL called boolean 
returnLL called val
attach_lists called
returnLL called )
returnLL called  {

returnLL called has_right
returnLL called  = 
returnLL called val
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Compare
returnLL called (
returnLL called int 
returnLL called num1
attach_lists called
returnLL called ,
returnLL called int 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called num2
returnLL called  + 
returnLL called 1
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called num1
returnLL called  != 
returnLL called num2
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called !
returnLL called (
returnLL called num1
returnLL called  <= 
returnLL called (
returnLL called nti
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called ntb
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Insert
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called new_node
returnLL called ;

attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key_aux
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called new_node
returnLL called  = 
returnLL called new 
returnLL called Tree
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called new_node
returnLL called .
returnLL called Init
returnLL called (
returnLL called v_key
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont
returnLL called )
returnLL called  {

returnLL called key_aux
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called v_key
returnLL called  <= 
returnLL called (
returnLL called key_aux
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetHas_Left
returnLL called (
returnLL called true
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetLeft
returnLL called (
returnLL called new_node
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetHas_Right
returnLL called (
returnLL called true
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called SetRight
returnLL called (
returnLL called new_node
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Delete
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
returnLL called Tree
returnLL called parent_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called found
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called is_root
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key_aux
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called parent_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called found
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called is_root
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont
returnLL called )
returnLL called  {

returnLL called key_aux
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called v_key
returnLL called  <= 
returnLL called (
returnLL called key_aux
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called parent_node
returnLL called  = 
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called (
returnLL called key_aux
returnLL called  <= 
returnLL called v_key
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called  && 
returnLL called (
returnLL called key_aux
returnLL called  != 
returnLL called v_key
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called parent_node
returnLL called  = 
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called if 
returnLL called (
returnLL called is_root
returnLL called )
returnLL called if 
returnLL called (
returnLL called !
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called  && 
returnLL called !
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Remove
returnLL called (
returnLL called parent_node
returnLL called ,
returnLL called current_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called Remove
returnLL called (
returnLL called parent_node
returnLL called ,
returnLL called current_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called found
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called is_root
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called found
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Remove
returnLL called (
returnLL called Tree
returnLL called p_node
attach_lists called
returnLL called ,
returnLL called Tree
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called auxkey1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called auxkey2
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RemoveLeft
returnLL called (
returnLL called p_node
returnLL called ,
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RemoveRight
returnLL called (
returnLL called p_node
returnLL called ,
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called auxkey1
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called auxkey2
returnLL called  = 
returnLL called (
returnLL called p_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called this
returnLL called .
returnLL called Compare
returnLL called (
returnLL called auxkey1
returnLL called ,
returnLL called auxkey2
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetLeft
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Left
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetRight
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Right
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called RemoveRight
returnLL called (
returnLL called Tree
returnLL called p_node
attach_lists called
returnLL called ,
returnLL called Tree
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called SetKey
returnLL called (
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called p_node
returnLL called  = 
returnLL called c_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called c_node
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetRight
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Right
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called RemoveLeft
returnLL called (
returnLL called Tree
returnLL called p_node
attach_lists called
returnLL called ,
returnLL called Tree
returnLL called c_node
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called SetKey
returnLL called (
returnLL called (
returnLL called c_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called p_node
returnLL called  = 
returnLL called c_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called c_node
returnLL called  = 
returnLL called c_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetLeft
returnLL called (
returnLL called my_null
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called p_node
returnLL called .
returnLL called SetHas_Left
returnLL called (
returnLL called false
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called Search
returnLL called (
returnLL called int 
returnLL called v_key
attach_lists called
returnLL called )
returnLL called  {

returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
returnLL called int 
returnLL called ifound
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called boolean 
returnLL called cont
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called int 
returnLL called key_aux
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ifound
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called while 
returnLL called (
returnLL called cont
returnLL called )
returnLL called  {

returnLL called key_aux
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called v_key
returnLL called  <= 
returnLL called (
returnLL called key_aux
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called if 
returnLL called (
returnLL called key_aux
returnLL called  <= 
returnLL called (
returnLL called v_key
returnLL called  - 
returnLL called 1
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called if 
returnLL called (
returnLL called current_node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called current_node
returnLL called  = 
returnLL called current_node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called else 
returnLL called  {

returnLL called ifound
returnLL called  = 
returnLL called 1
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called cont
returnLL called  = 
returnLL called false
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called ifound
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called Print
returnLL called (
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called Tree
returnLL called current_node
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called current_node
returnLL called  = 
returnLL called this
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RecPrint
returnLL called (
returnLL called current_node
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called boolean 
returnLL called RecPrint
returnLL called (
returnLL called Tree
returnLL called node
attach_lists called
returnLL called )
returnLL called  {

returnLL called boolean 
returnLL called ntb
returnLL called ;

attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called node
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RecPrint
returnLL called (
returnLL called node
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called node
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called node
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called ntb
returnLL called  = 
returnLL called this
returnLL called .
returnLL called RecPrint
returnLL called (
returnLL called node
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called ntb
returnLL called  = 
returnLL called true
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called true
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called accept
returnLL called (
returnLL called Visitor
returnLL called v
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called 333
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called v
returnLL called .
returnLL called visit
returnLL called (
returnLL called this
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called Visitor
returnLL called  {

returnLL called Tree
returnLL called l
returnLL called ;

attach_lists called
attach_lists called
returnLL called Tree
returnLL called r
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called public 
returnLL called int 
returnLL called visit
returnLL called (
returnLL called Tree
returnLL called n
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called n
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called r
returnLL called  = 
returnLL called n
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called r
returnLL called .
returnLL called accept
returnLL called (
returnLL called this
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nti
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called n
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called l
returnLL called  = 
returnLL called n
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called l
returnLL called .
returnLL called accept
returnLL called (
returnLL called this
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nti
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called class 
returnLL called MyVisitor
returnLL called extends 
returnLL called Visitor
returnLL called  {

returnLL called public 
returnLL called int 
returnLL called visit
returnLL called (
returnLL called Tree
returnLL called n
attach_lists called
returnLL called )
returnLL called  {

returnLL called int 
returnLL called nti
returnLL called ;

attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called n
returnLL called .
returnLL called GetHas_Right
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called r
returnLL called  = 
returnLL called n
returnLL called .
returnLL called GetRight
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called r
returnLL called .
returnLL called accept
returnLL called (
returnLL called this
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nti
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called System.out.println
returnLL called (
returnLL called n
returnLL called .
returnLL called GetKey
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called if 
returnLL called (
returnLL called n
returnLL called .
returnLL called GetHas_Left
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called )
returnLL called  {

returnLL called l
returnLL called  = 
returnLL called n
returnLL called .
returnLL called GetLeft
returnLL called (
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
returnLL called nti
returnLL called  = 
returnLL called l
returnLL called .
returnLL called accept
returnLL called (
returnLL called this
returnLL called )
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
returnLL called else 
returnLL called nti
returnLL called  = 
returnLL called 0
returnLL called ;

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called return 
returnLL called 0
returnLL called ;

returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
returnLL called }

attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called
attach_lists called


printLL called
